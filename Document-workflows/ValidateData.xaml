<Activity mc:Ignorable="sap sap2010 sads" x:Class="ValidateData"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_isValidData" Type="OutArgument(x:Boolean)" />
    <x:Property Name="io_requesterMessages" Type="InOutArgument(scg:List(x:String))" />
    <x:Property Name="in_pdfPath" Type="InArgument(x:String)" />
    <x:Property Name="out_isValidTemplate" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_personData" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ValidateData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ValidateData" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="pdfText" />
      <Variable x:TypeArguments="x:String" Name="personName" />
      <Variable x:TypeArguments="x:String" Name="personAddress" />
      <Variable x:TypeArguments="x:String" Name="personSex" />
      <Variable x:TypeArguments="x:String" Name="personJob" />
      <Variable x:TypeArguments="str:Match" Name="birthMatch" />
      <Variable x:TypeArguments="x:String" Name="personBirth" />
      <Variable x:TypeArguments="x:String" Name="personMail" />
      <Variable x:TypeArguments="x:String" Name="personPhone1" />
      <Variable x:TypeArguments="x:String" Name="personPhone2" />
      <Variable x:TypeArguments="x:String" Name="personNationality" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Validate Data: Start&quot;]" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_personData]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary( of String, String)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[in_pdfPath]" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="150" Range="All" Text="[pdfText]">
      <ui:ReadPDFWithOCR.OCREngine>
        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
          <ActivityFunc.Argument>
            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
          </ActivityFunc.Argument>
          <ui:GoogleOCR FilterRegion="{x:Null}" Text="{x:Null}" AllowedCharacters="" DeniedCharacters="" DisplayName="Tesseract OCR" ExtractWords="False" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" Invert="False" Language="eng" Profile="Legacy" Scale="2" />
        </ActivityFunc>
      </ui:ReadPDFWithOCR.OCREngine>
    </ui:ReadPDFWithOCR>
    <If Condition="[pdfText.ToUpper.Contains(&quot;EUROPASS&quot;)]" DisplayName="Verify template" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_isValidTemplate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Validate Data: Template is valid&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_isValidTemplate]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Validate Data: Template is not valid&quot;]" />
          <AddToCollection x:TypeArguments="x:String" Collection="[io_requesterMessages]" DisplayName="Add To Collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="Please note that the template is not valid. An Europass CV is requested. The current request will be rejected." />
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[out_isValidTemplate]" DisplayName="Data Validation" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="textSplit" />
          </Sequence.Variables>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_isValidData]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Get Data: Start&quot;]" />
          <Assign DisplayName="Assign - cut unwanted data" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[pdfText]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[pdfText.ToUpper.Remove(0, pdfText.IndexOf("PERSONAL"))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[textSplit]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[pdfText.Split(New String() {Environment.NewLine}, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
            </Assign.Value>
          </Assign>
          <Sequence sap2010:Annotation.AnnotationText="First line of split text" DisplayName="Name" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="str:Match" Name="nameMatch" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="str:Match">[nameMatch]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(textSplit(0) ,"(?&lt;=PERSONAL INFORMATION).*")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[personName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[nameMatch.Value.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Name: &quot; +personName]" />
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="The entire line" DisplayName="Address" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[personAddress]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[textSplit(1).trim]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Address: &quot; +personAddress]" />
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Line 3" DisplayName="Phone" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="phoneSplit" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[textSplit(2)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[textSplit(2).Replace(" ", "")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[textSplit(2)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[textSplit(2).Replace("'", "")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[textSplit(2)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[textSplit(2).Replace("|", "")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[textSplit(2)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[textSplit(2).Replace("_", "")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[textSplit(2)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[textSplit(2).Replace("[", "")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[textSplit(2)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[textSplit(2).Replace("]", "")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - if we have 2 phone nr" sap2010:WorkflowViewState.IdRef="Assign_21">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[phoneSplit]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[textSplit(2).Split(New String() {"+"}, StringSplitOptions.RemoveEmptyEntries)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[phoneSplit.Count = 2]" sap2010:WorkflowViewState.IdRef="If_5">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[personPhone1]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["+"+phoneSplit(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[personPhone2]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["+"+phoneSplit(1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Phone 1: &quot; +personPhone1]" />
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Phone 2: &quot; +personPhone2]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <If Condition="[phoneSplit.Count = 1]" sap2010:WorkflowViewState.IdRef="If_6">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[personPhone1]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["+"+phoneSplit(0)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[personPhone2]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Phone 1: &quot; +personPhone1]" />
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Phone 2: &quot; +personPhone2]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[out_isValidData]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;No phone number provided&quot;]" />
                      <AddToCollection x:TypeArguments="x:String" Collection="[io_requesterMessages]" DisplayName="Add To Collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="Please note that no phone number was provided. The current request will be rejected" />
                    </Sequence>
                  </If.Else>
                </If>
              </If.Else>
            </If>
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Found in line 4" DisplayName="Email" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Sequence.Variables>
              <Variable x:TypeArguments="str:Match" Name="emailMatch" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="str:Match">[emailMatch]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(textSplit(3), "[a-zA-Z0-9.!#$%&amp;'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[personMail]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[emailMatch.Value.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[String.IsNullOrWhiteSpace(personMail)]" DisplayName="If - Check Mail " sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Validate Data: Invalid email address.&quot;]" />
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[out_isValidData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <AddToCollection x:TypeArguments="x:String" Collection="[io_requesterMessages]" DisplayName="Add To Collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="Please note that the email address is invalid or it doesn't exist. The request will be rejected" />
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Mail: &quot; +personMail]" />
              </If.Else>
            </If>
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Line 6" DisplayName="Sex" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <Sequence.Variables>
              <Variable x:TypeArguments="str:Match" Name="sexMatch" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="str:Match">[sexMatch]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(textSplit(5) ,"FEMALE|MALE")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[personSex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[sexMatch.Value.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Sex: &quot; +personSex]" />
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Line 6" DisplayName="Date of birth &amp; Nationality" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="birthMatchPattern" />
            </Sequence.Variables>
            <If Condition="[textSplit(5).Contains(&quot;NATIONALITY&quot;)]" DisplayName="If - Nationality exists" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="str:Match" Name="nationalityMatch" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[birthMatchPattern]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">(?&lt;=DATE OF BIRTH).*(?=NATIONALITY)</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                    <Assign.To>
                      <OutArgument x:TypeArguments="str:Match">[nationalityMatch]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(textSplit(5) ,"(?&lt;=NATIONALITY).*")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[personNationality]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[nationalityMatch.Value.Trim]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[birthMatchPattern]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">(?&lt;=DATE OF BIRTH).*</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="str:Match">[birthMatch]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(textSplit(5) ,birthMatchPattern)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[personBirth]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[birthMatch.Value.Trim.Substring(0, 10)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Birth: &quot; +personBirth]" />
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;Nationality: &quot; +personNationality]" />
          </Sequence>
          <Sequence sap2010:Annotation.AnnotationText="Line 7" DisplayName="Job Applied" sap2010:WorkflowViewState.IdRef="Sequence_13">
            <Sequence.Variables>
              <Variable x:TypeArguments="str:Match" Name="jobMatch" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="str:Match">[jobMatch]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(textSplit(6) ,"(?&lt;=JOB APPLIED FOR).*")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[personJob]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[jobMatch.Value.Trim]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Job: &quot; +personJob]" />
          </Sequence>
        </Sequence>
      </If.Then>
    </If>
    <If Condition="[out_isValidData]" DisplayName="If - Store data in Dictionary" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="NAME" Value="[personName]" />
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_2" Key="ADDRESS" Value="[personAddress]" />
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_7" Key="PHONE_1" Value="[personPhone1]" />
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_8" Key="PHONE_2" Value="[personPhone2]" />
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_3" Key="EMAIL" Value="[personMail]" />
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_4" Key="SEX" Value="[personSex]" />
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_5" Key="BIRTHDATE" Value="[personBirth]" />
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_9" Key="NATIONALITY" Value="[personNationality]" />
          <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[out_personData]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_6" Key="JOB" Value="[personJob]" />
        </Sequence>
      </If.Then>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Valid data? - &quot; +out_isValidData.ToString]" />
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="1227,91" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="1227,60" />
      <sap2010:ViewStateData Id="GoogleOCR_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ReadPDFWithOCR_1" sap:VirtualizedContainerService.HintSize="1227,131" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1227,525" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="1080,60" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="1080,91" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="1080,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="1080,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="1080,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="1080,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="1058,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="1058,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="1058,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="1058,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="1058,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="1058,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="1058,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="336,546">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="336,546">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddToCollection`1_6" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="697,694" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="1058,842" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="1080,1693">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="675,525" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="1080,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="1080,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="531,532" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="531,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="531,60" />
      <sap2010:ViewStateData Id="LogMessage_20" sap:VirtualizedContainerService.HintSize="531,91" />
      <sap2010:ViewStateData Id="LogMessage_22" sap:VirtualizedContainerService.HintSize="531,91" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="1080,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="1080,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="1102,2956">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1227,3104" />
      <sap2010:ViewStateData Id="AddToDictionary`2_1" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="AddToDictionary`2_2" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="AddToDictionary`2_7" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="AddToDictionary`2_8" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="AddToDictionary`2_3" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="AddToDictionary`2_4" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="AddToDictionary`2_5" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="AddToDictionary`2_9" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="AddToDictionary`2_6" sap:VirtualizedContainerService.HintSize="378,138" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="400,1686">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="1227,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="1227,91" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1249,4417">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ValidateData_1" sap:VirtualizedContainerService.HintSize="1289,4497" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>